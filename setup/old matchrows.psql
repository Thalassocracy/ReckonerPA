CREATE VIEW reckoner.matchrows AS
    SELECT
        a.match_id,
        time_start,
        titans,
        ranked,
        tourney,
        all_dead,

        a.team_num,
        win,
        shared,
        size as team_size,

        a.player_num,
        username,
        alpha,
        beta,
        win_chance,
        (eco10 / 10.0) as eco,

        d.eco_mean,
        eco_var,
        team_size_mean,
        team_size_var,
        team_count,
        scored,

        f.player_type,
        f.player_id
    FROM reckoner.armies a

    INNER JOIN  reckoner.teams b
    ON (a.match_id, a.team_num) = (b.match_id, b.team_num)

    INNER JOIN reckoner.matches c
    ON (a.match_id) = (c.match_id)

    INNER JOIN (
        SELECT
            a.match_id,
            AVG(eco10 / 10.0) as eco_mean,
            VAR_SAMP(eco10 / 10.0) as eco_var,
            AVG(size) as team_size_mean,
            VAR_SAMP(size) as team_size_var,
            COUNT(DISTINCT(b.team_num)) as team_count,
            EVERY(alpha IS NOT NULL AND beta IS NOT NULL) as scored,
            (EVERY(player_id != '-1') AND EVERY(player_id != 'Idle') AND EVERY(player_id != 'Idle QBE')) as players_valid
        FROM reckoner.armies AS a
        INNER JOIN reckoner.teams AS b
        ON (a.match_id, a.team_num) = (b.match_id, b.team_num)
        GROUP BY a.match_id
    ) d
    ON a.match_id = d.match_id

    INNER JOIN (
        SELECT 
            match_id, 
            COUNT(*) as winner_count
        FROM reckoner.teams
        WHERE win
        GROUP BY match_id
    ) e 
    ON a.match_id = e.match_id

    INNER JOIN (
        SELECT 
            match_id,
            player_num,
            main_player_type as player_type,
            main_player_id as player_id
        FROM reckoner.armies
        INNER JOIN reckoner.smurfs 
        ON (alt_player_type, alt_player_id) = (player_type, player_id)
        UNION ALL
        SELECT 
            match_id,
            player_num,
            player_type,
            player_id
        FROM reckoner.armies
        WHERE NOT EXISTS (
            SELECT * FROM reckoner.smurfs
            WHERE player_type = alt_player_type
            AND player_id = alt_player_id
        )
    ) f
    ON (a.match_id, a.player_num) = (f.match_id, f.player_num)

    WHERE team_count > 1 
    AND players_valid 
    AND (all_dead or e.winner_count = 1) 
    AND NOT sandbox;